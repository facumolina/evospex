module unknown

open util/integer

one sig Null {}

abstract sig Node {}

one sig N0 extends Node {}

one sig N1 extends Node {}

one sig N2 extends Node {}

one sig N3 extends Node {}

one sig N4 extends Node {}

abstract sig BinaryHeap {}

one sig T0 extends BinaryHeap {}

abstract sig boolean {}

one sig true extends boolean {}

one sig false extends boolean {}

pred repOK [thiz: BinaryHeap, root: BinaryHeap ->one (Node + Null), left: Node ->one (Node + Null), right: Node ->one (Node + Null), size: BinaryHeap ->one Int, element: BinaryHeap ->one Int] {
--repOKBody
}
 
pred SimmetryBreaking [thiz: BinaryHeap, root: BinaryHeap ->one (Node + Null), left: Node ->one (Node + Null), right: Node ->one (Node + Null), element: Node ->one Int] {
(root in T0 -> Null + T0 -> N0 and left in N0 -> Null + N0 -> N0 + N0 -> N1 + N1 -> Null + N1 -> N1 + N1 -> N0 + N1 -> N2 + N2 -> Null + N2 -> N0 + N2 -> N1 + N2 -> N2 + N2 -> N3 + N2 -> N4 + N3 -> Null + N3 -> N0 + N3 -> N1 + N3 -> N2 + N3 -> N3 + N3 -> N4 + N4 -> Null + N4 -> N0 + N4 -> N1 + N4 -> N2 + N4 -> N3 + N4 -> N4 and right in N0 -> Null + N0 -> N0 + N0 -> N1 + N0 -> N2 + N1 -> Null + N1 -> N0 + N1 -> N1 + N1 -> N2 + N1 -> N3 + N1 -> N4 + N2 -> Null + N2 -> N0 + N2 -> N1 + N2 -> N2 + N2 -> N3 + N2 -> N4 + N3 -> Null + N3 -> N0 + N3 -> N1 + N3 -> N2 + N3 -> N3 + N3 -> N4 + N4 -> Null + N4 -> N0 + N4 -> N1 + N4 -> N2 + N4 -> N3 + N4 -> N4 and all 	n: one Node - (thiz.root).* (left + right) | { 
(n.left = Null and n.right = Null and eq[n.element, 0] )}
 ) 
}
 
/* action pick*/ 
pred pick [s, s': set Node, e, e': Node] {
(some s and e' in s and s' = s - e' ) 
}
 
pred repOKOKDYN4 [thiz_0: BinaryHeap, root_0: BinaryHeap ->one (Node + Null), left_0: Node ->one (Node + Null), right_0: Node ->one (Node + Null), size_0: BinaryHeap ->one Int, element_0: Node ->one Int, result_0, result_1, result_2, result_3, result_4, result_5, result_6, result_7, result_8, result_9, result_10, result_11, result_12: boolean] {
some 	current_0, current_1, current_2, current_3, current_4, current_5: one Node + Null, 	visited_1, visited_2, visited_3, visited_4, visited_5, visited_6, visited_7, visited_8, visited_9, visited_10, visited_11: set Node, 	workset_1, workset_2, workset_3, workset_4, workset_5, workset_6, workset_7, workset_8, workset_9, workset_10, workset_11, workset_12, workset_13, workset_14, workset_15, workset_16: set Node | { 
(workset_1 = thiz_0.root_0 and visited_1 = thiz_0.root_0 and ((thiz_0.root_0 = Null and ((thiz_0.size_0 = 0 and result_1 = true ) or (not thiz_0.size_0 = 0 and result_1 = false ) ) and result_1 = result_12 and current_0 = current_5 and visited_1 = visited_11 and workset_1 = workset_16 ) or (not thiz_0.root_0 = Null and result_1 = true and ((result_1 = result_11 and current_0 = current_5 and visited_1 = visited_11 and workset_1 = workset_16 ) or (result_1 = true and some workset_1 and pick[workset_1, workset_2, current_0, current_1] and (((current_1.left_0) != Null and ((current_1.left_0 in visited_1 and result_2 = false and visited_1 = visited_2 and workset_2 = workset_3 ) or (not current_1.left_0 in visited_1 and ((lt[current_1.element_0, (current_1.left_0).element_0] and result_2 = false and visited_1 = visited_2 and workset_2 = workset_3 ) or (not lt[current_1.element_0, (current_1.left_0).element_0] and visited_2 = visited_1 + current_1.left_0 and workset_3 = workset_2 + current_1.left_0 and result_1 = result_2 ) ) ) ) ) or (not (current_1.left_0) != Null and result_1 = result_2 and visited_1 = visited_2 and workset_2 = workset_3 ) ) and ((result_2 = true and (current_1.right_0) != Null and ((current_1.right_0 in visited_2 and result_3 = false and visited_2 = visited_3 and workset_3 = workset_4 ) or (not current_1.right_0 in visited_2 and ((lt[current_1.element_0, (current_1.right_0).element_0] and result_3 = false and visited_2 = visited_3 and workset_3 = workset_4 ) or (not lt[current_1.element_0, (current_1.right_0).element_0] and visited_3 = visited_2 + current_1.right_0 and workset_4 = workset_3 + current_1.right_0 and result_2 = result_3 ) ) ) ) ) or (not (result_2 = true and (current_1.right_0) != Null ) and result_2 = result_3 and visited_2 = visited_3 and workset_3 = workset_4 ) ) and ((result_3 = result_11 and current_1 = current_5 and visited_3 = visited_11 and workset_4 = workset_16 ) or (result_3 = true and some workset_4 and pick[workset_4, workset_5, current_1, current_2] and (((current_2.left_0) != Null and ((current_2.left_0 in visited_3 and result_4 = false and visited_3 = visited_4 and workset_5 = workset_6 ) or (not current_2.left_0 in visited_3 and ((lt[current_2.element_0, (current_2.left_0).element_0] and result_4 = false and visited_3 = visited_4 and workset_5 = workset_6 ) or (not lt[current_2.element_0, (current_2.left_0).element_0] and visited_4 = visited_3 + current_2.left_0 and workset_6 = workset_5 + current_2.left_0 and result_3 = result_4 ) ) ) ) ) or (not (current_2.left_0) != Null and result_3 = result_4 and visited_3 = visited_4 and workset_5 = workset_6 ) ) and ((result_4 = true and (current_2.right_0) != Null and ((current_2.right_0 in visited_4 and result_5 = false and visited_4 = visited_5 and workset_6 = workset_7 ) or (not current_2.right_0 in visited_4 and ((lt[current_2.element_0, (current_2.right_0).element_0] and result_5 = false and visited_4 = visited_5 and workset_6 = workset_7 ) or (not lt[current_2.element_0, (current_2.right_0).element_0] and visited_5 = visited_4 + current_2.right_0 and workset_7 = workset_6 + current_2.right_0 and result_4 = result_5 ) ) ) ) ) or (not (result_4 = true and (current_2.right_0) != Null ) and result_4 = result_5 and visited_4 = visited_5 and workset_6 = workset_7 ) ) and ((result_5 = result_11 and current_2 = current_5 and visited_5 = visited_11 and workset_7 = workset_16 ) or (result_5 = true and some workset_7 and pick[workset_7, workset_8, current_2, current_3] and (((current_3.left_0) != Null and ((current_3.left_0 in visited_5 and result_6 = false and visited_5 = visited_6 and workset_8 = workset_9 ) or (not current_3.left_0 in visited_5 and ((lt[current_3.element_0, (current_3.left_0).element_0] and result_6 = false and visited_5 = visited_6 and workset_8 = workset_9 ) or (not lt[current_3.element_0, (current_3.left_0).element_0] and visited_6 = visited_5 + current_3.left_0 and workset_9 = workset_8 + current_3.left_0 and result_5 = result_6 ) ) ) ) ) or (not (current_3.left_0) != Null and result_5 = result_6 and visited_5 = visited_6 and workset_8 = workset_9 ) ) and ((result_6 = true and (current_3.right_0) != Null and ((current_3.right_0 in visited_6 and result_7 = false and visited_6 = visited_7 and workset_9 = workset_10 ) or (not current_3.right_0 in visited_6 and ((lt[current_3.element_0, (current_3.right_0).element_0] and result_7 = false and visited_6 = visited_7 and workset_9 = workset_10 ) or (not lt[current_3.element_0, (current_3.right_0).element_0] and visited_7 = visited_6 + current_3.right_0 and workset_10 = workset_9 + current_3.right_0 and result_6 = result_7 ) ) ) ) ) or (not (result_6 = true and (current_3.right_0) != Null ) and result_6 = result_7 and visited_6 = visited_7 and workset_9 = workset_10 ) ) and ((result_7 = result_11 and current_3 = current_5 and visited_7 = visited_11 and workset_10 = workset_16 ) or (result_7 = true and some workset_10 and pick[workset_10, workset_11, current_3, current_4] and (((current_4.left_0) != Null and ((current_4.left_0 in visited_7 and result_8 = false and visited_7 = visited_8 and workset_11 = workset_12 ) or (not current_4.left_0 in visited_7 and ((lt[current_4.element_0, (current_4.left_0).element_0] and result_8 = false and visited_7 = visited_8 and workset_11 = workset_12 ) or (not lt[current_4.element_0, (current_4.left_0).element_0] and visited_8 = visited_7 + current_4.left_0 and workset_12 = workset_11 + current_4.left_0 and result_7 = result_8 ) ) ) ) ) or (not (current_4.left_0) != Null and result_7 = result_8 and visited_7 = visited_8 and workset_11 = workset_12 ) ) and ((result_8 = true and (current_4.right_0) != Null and ((current_4.right_0 in visited_8 and result_9 = false and visited_8 = visited_9 and workset_12 = workset_13 ) or (not current_4.right_0 in visited_8 and ((lt[current_4.element_0, (current_4.right_0).element_0] and result_9 = false and visited_8 = visited_9 and workset_12 = workset_13 ) or (not lt[current_4.element_0, (current_4.right_0).element_0] and visited_9 = visited_8 + current_4.right_0 and workset_13 = workset_12 + current_4.right_0 and result_8 = result_9 ) ) ) ) ) or (not (result_8 = true and (current_4.right_0) != Null ) and result_8 = result_9 and visited_8 = visited_9 and workset_12 = workset_13 ) ) and ((result_9 = result_11 and current_4 = current_5 and visited_9 = visited_11 and workset_13 = workset_16 ) or (result_9 = true and some workset_13 and pick[workset_13, workset_14, current_4, current_5] and (((current_5.left_0) != Null and ((current_5.left_0 in visited_9 and result_10 = false and visited_9 = visited_10 and workset_14 = workset_15 ) or (not current_5.left_0 in visited_9 and ((lt[current_5.element_0, (current_5.left_0).element_0] and result_10 = false and visited_9 = visited_10 and workset_14 = workset_15 ) or (not lt[current_5.element_0, (current_5.left_0).element_0] and visited_10 = visited_9 + current_5.left_0 and workset_15 = workset_14 + current_5.left_0 and result_9 = result_10 ) ) ) ) ) or (not (current_5.left_0) != Null and result_9 = result_10 and visited_9 = visited_10 and workset_14 = workset_15 ) ) and ((result_10 = true and (current_5.right_0) != Null and ((current_5.right_0 in visited_10 and result_11 = false and visited_10 = visited_11 and workset_15 = workset_16 ) or (not current_5.right_0 in visited_10 and ((lt[current_5.element_0, (current_5.right_0).element_0] and result_11 = false and visited_10 = visited_11 and workset_15 = workset_16 ) or (not lt[current_5.element_0, (current_5.right_0).element_0] and visited_11 = visited_10 + current_5.right_0 and workset_16 = workset_15 + current_5.right_0 and result_10 = result_11 ) ) ) ) ) or (not (result_10 = true and (current_5.right_0) != Null ) and result_10 = result_11 and visited_10 = visited_11 and workset_15 = workset_16 ) ) ) ) ) ) ) ) ) ) ) ) and not (result_11 = true and some workset_16 ) and ((result_11 = true and (#(visited_11)) != (thiz_0.size_0) and result_12 = false ) or (not (result_11 = true and (#(visited_11)) != (thiz_0.size_0) ) and result_11 = result_12 ) ) ) ) )}
 
}
 
pred repOKOK_TRUEDYN5 [thiz_0: BinaryHeap, root_0: BinaryHeap ->one (Node + Null), left_0: Node ->one (Node + Null), right_0: Node ->one (Node + Null), size_0: BinaryHeap ->one Int, element_0: Node ->one Int, result_0, result_1, result_2, result_3, result_4, result_5, result_6, result_7, result_8, result_9, result_10, result_11, result_12: boolean] {
(SimmetryBreaking[thiz_0, root_0, left_0, right_0, element_0] and repOKOKDYN4[thiz_0, root_0, left_0, right_0, size_0, element_0, result_0, result_1, result_2, result_3, result_4, result_5, result_6, result_7, result_8, result_9, result_10, result_11, result_12] and result_12 = true and thiz_0.size_0 = 5 ) 
}

run repOKOK_TRUEDYN5 for 5 but 5 int
